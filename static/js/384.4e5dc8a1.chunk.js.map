{"version":3,"file":"static/js/384.4e5dc8a1.chunk.js","mappings":"mUAMMA,EAAgB,CAClB,CACIC,MAAO,mBACPC,YAAa,mCACbC,KAAM,CACF,CAAEC,IAAKC,EAAYC,KAAM,cACzB,CAAEF,IAAKG,EAAaD,KAAM,sBAGlC,CACIL,MAAO,SACPC,YAAa,yBACbC,KAAM,CAAC,CAAEC,IAAKC,EAAYC,KAAM,wBAyFxC,MArFA,WACI,IAAAE,GAAoDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzDI,EAAkBF,EAAA,GAAEG,EAAqBH,EAAA,GAG1CI,EAAiB,SAACC,GAEhBH,EAAmBI,SAASD,GAC5BF,EACID,EAAmBK,QACf,SAACC,GAAa,OAAKA,IAAkBH,CAAK,KAMlDF,EAAsB,GAADM,QAAAC,EAAAA,EAAAA,GAAKR,GAAkB,CAAEG,IAEtD,EAeJ,OACIM,EAAAA,EAAAA,KAAA,OAAAC,SACKtB,EAAcuB,KAAI,SAACC,EAAUT,GAAK,OAC/BU,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACIG,EAAAA,EAAAA,MAAA,OACIC,UAAU,kBACVC,QAAS,kBAAMb,EAAeC,EAAM,EAACO,SAAA,EAErCG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeJ,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,MAAAC,SAAKE,EAASvB,QACbW,EAAmBI,SAASD,IACzBM,EAAAA,EAAAA,KAACO,EAAAA,IAAW,CACRF,UAAS,kBACTC,QAAS,kBAAMb,EAAeC,EAAM,KAGxCM,EAAAA,EAAAA,KAACQ,EAAAA,IAAY,CACTH,UAAS,kBACTC,QAAS,kBAAMb,EAAeC,EAAM,QAIhDM,EAAAA,EAAAA,KAAA,KAAGK,UAAU,uBAAsBJ,SAAEE,EAAStB,iBAEjDU,EAAmBI,SAASD,KACzBM,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gBAAeJ,UAC1BD,EAAAA,EAAAA,KAAA,MAAAC,SACKE,EAASrB,KAAKoB,KAAI,SAACO,EAAKC,GAAQ,OAC7BV,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,KAAGW,KAAMF,EAAI1B,IAAK6B,UAAQ,EAAAX,SACrBQ,EAAIxB,QAFJyB,EAIJ,QAMpBnB,EAAmBI,SAASD,KACzBM,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAkBC,QAAS,SAACO,GAAC,OAAKA,EAAEC,iBAAiB,EAACb,UACjED,EAAAA,EAAAA,KAAA,UAAQM,QAAS,WAAwBH,EAASrB,KAnD7DiC,SAAQ,SAACN,GACV,IAAMO,EAAOC,SAASC,cAAc,KACpCF,EAAKL,KAAOF,EAAI1B,IAChBiC,EAAKJ,SAAWH,EAAIxB,KACpB+B,EAAKG,iBAAiB,SAAS,WAC3BC,QAAQC,MAAM,sBAADvB,OAAuBW,EAAIxB,MAC5C,IACA+B,EAAKM,OACT,GA2CuE,EAACrB,SAAC,mBAMhEP,IAAUf,EAAc4C,OAAS,IAAKvB,EAAAA,EAAAA,KAAA,WA3CjCN,EA4CJ,KAIlB,C","sources":["views/PDFs.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './PDFs.css'\nimport examplePDF from \"../pdfs/Resume.pdf\";\nimport examplePDF2 from \"../pdfs/lecture.pdf\";\nimport { FaAngleRight, FaAngleDown } from \"react-icons/fa\";\n\nconst pdfCategories = [\n    {\n        title: \"Job Applications\",\n        description: \"PDFs related to job applications\",\n        pdfs: [\n            { url: examplePDF, name: \"Resume.pdf\" },\n            { url: examplePDF2, name: \"Cover Letter.pdf\" },\n        ],\n    },\n    {\n        title: \"School\",\n        description: \"PDFs related to school\",\n        pdfs: [{ url: examplePDF, name: \"Lecture Notes.pdf\" }],\n    },\n];\n\nfunction PDFs() {\n    const [expandedCategories, setExpandedCategories] = useState([]);\n\n    // Function to toggle a category's expansion state\n    const toggleCategory = (index) => {\n        // If category is already expanded, collapse it\n        if (expandedCategories.includes(index)) {\n            setExpandedCategories(\n                expandedCategories.filter(\n                    (categoryIndex) => categoryIndex !== index\n                )\n            );\n        }\n        // If category is not expanded, expand it\n        else {\n            setExpandedCategories([...expandedCategories, index]);\n        }\n    };\n\n    // Function to download all PDFs in a category\n    const handleDownloadAll = (pdfs) => {\n        pdfs.forEach((pdf) => {\n            const link = document.createElement(\"a\");\n            link.href = pdf.url;\n            link.download = pdf.name;\n            link.addEventListener(\"error\", () => {\n                console.error(`Failed to download ${pdf.name}`);\n            });\n            link.click();\n        });\n    };\n\nreturn (\n    <div>\n        {pdfCategories.map((category, index) => (\n            <div key={index}>\n                <div\n                    className=\"category-header\"\n                    onClick={() => toggleCategory(index)}\n                >\n                    <div className=\"title-wrapper\">\n                        <h2>{category.title}</h2>\n                        {expandedCategories.includes(index) ? (\n                            <FaAngleDown\n                                className={`arrow-icon down`}\n                                onClick={() => toggleCategory(index)}\n                            />\n                        ) : (\n                            <FaAngleRight\n                                className={`arrow-icon left`}\n                                onClick={() => toggleCategory(index)}\n                            />\n                        )}\n                    </div>\n                    <p className=\"category-description\">{category.description}</p>\n                </div>\n                {expandedCategories.includes(index) && (\n                    <div className=\"category-body\">\n                        <ul>\n                            {category.pdfs.map((pdf, pdfIndex) => (\n                                <li key={pdfIndex}>\n                                    <a href={pdf.url} download>\n                                        {pdf.name}\n                                    </a>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                )}\n\n                {expandedCategories.includes(index) && (\n                    <div className=\"download-button\" onClick={(e) => e.stopPropagation()}>\n                        <button onClick={() => handleDownloadAll(category.pdfs)}>\n                            Download All\n                        </button>\n                    </div>\n                )}\n\n                {index !== pdfCategories.length - 1 && <hr />} \n            </div>\n        ))}\n    </div>\n);\n}\n\nexport default PDFs;\n"],"names":["pdfCategories","title","description","pdfs","url","examplePDF","name","examplePDF2","_useState","useState","_useState2","_slicedToArray","expandedCategories","setExpandedCategories","toggleCategory","index","includes","filter","categoryIndex","concat","_toConsumableArray","_jsx","children","map","category","_jsxs","className","onClick","FaAngleDown","FaAngleRight","pdf","pdfIndex","href","download","e","stopPropagation","forEach","link","document","createElement","addEventListener","console","error","click","length"],"sourceRoot":""}